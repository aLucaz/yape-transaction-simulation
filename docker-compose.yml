version: "3.7"
services:
  postgres:
    image: postgres:14
    container_name: yp_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=db_transactions
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    platform: linux/amd64
    image: confluentinc/cp-zookeeper:5.5.3
    container_name: yp_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    platform: linux/amd64
    image: confluentinc/cp-enterprise-kafka:5.5.3
    container_name: yp_kafka
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--bootstrap-server",
          "kafka:9092",
          "--list"
        ]
      interval: 20s
      timeout: 10s
      retries: 6

  kafka-post-build:
    platform: linux/amd64
    container_name: yp_kafka_pb
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      kafka:
        condition: service_healthy
    command:
      - /bin/bash
      - -c
      - |
        sleep 10
        kafka-topics --bootstrap-server kafka:9092 --create --topic db-write-event-topic --partitions 1 --replication-factor 1
        exit 0
